#!/usr/bin/env coffee

{ log } = require 'lightsaber'
fs = require 'fs'
require 'shelljs/global'
bitcore = require 'bitcore'
forge = require 'node-forge'
ClaimData = require './src/ClaimData.coffee'

if not which 'openssl'
  echo 'Sorry, this script requires openssl'
  exit 1


class CreateCert
  constructor: ->
    mkdir '-p', 'tmp/certs'
    cd 'tmp/certs'
    @data = new ClaimData()

  generateCert: ->
    btcAddress = @data.destinationAddress()
    domainName = @data.domainName

    certSubject = "/C=US/ST=CA/L=San Francisco/O=OrgName/OU=#{btcAddress}/CN=#{domainName}"
    exec """
      openssl req \
        -new \
        -newkey rsa:2048 \
        -nodes \
        -x509 \
        -days 365 \
        -subj "#{certSubject}" \
        -keyout #{domainName}.key \
        -out #{domainName}.cert
    """

    @data.certSignatureHash = @certSignatureHash()

  certSignature: ->
    cert = "#{@data.domainName}.cert"
    certText = exec "openssl x509 -noout -text -in #{cert}", silent: true

    match = certText.output.match /\n\s+Signature Algorithm: sha1WithRSAEncryption\s*((?:[0-9a-f]{2}[:\s]+)+)/
    signature = match[1].replace /\W/g, ''

  certSignatureHash: ->
    buffer = new Buffer @certSignature(), 'hex'
    @digest buffer, encoding: 'HEX'

  digest: (text, options) ->
    options.encoding ?= 'utf-8'
    options.algorithm ?= 'sha256'
    message_digest = forge.md[options.algorithm].create()
    message_digest.update text, options.encoding
    message_digest.digest().toHex()

create = new CreateCert()
create.generateCert()
create.data.save "#{create.data.domainName}.json"

log create.data.serialize()
# log ""
# log "Certificate Validity Bitcoin Address: " + create.data.destinationAddress()
# log "Certificate Validity WIF Private: " + create.data.destinationPK.toWIF()
# log ""
# log "Certificate Signature (sha1WithRSAEncryption): " + create.certSignature()
# log "Hash of the Certificate Signature (sha256): " + create.data.certSignatureHash
# log ""
# log "Please put 0.005 BTC to #{create.data.tempAddress()} to maintain this claim. (TestNet)"
