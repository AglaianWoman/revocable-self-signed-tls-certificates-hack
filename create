#!/usr/bin/env coffee

{ log } = require 'lightsaber'
bitcore = require 'bitcore'
require 'shelljs/global'
forge = require 'node-forge'

digest = (text, options) ->
  options.encoding ?= 'utf-8'
  message_digest = forge.md[options.algorithm].create()
  message_digest.update text, options.encoding
  {
    message_digest
    hex: message_digest.digest().toHex()
  }

#################################
# main
#################################

if not which 'openssl'
  echo 'Sorry, this script requires openssl'
  exit 1

#################################
# create tmp directory to store
#################################

domainName =  "www.mydomain.com"
mkdir '-p', 'tmp/certs'
cd 'tmp/certs'

#################################
# bitcoin address
#################################

privateKey = new bitcore.PrivateKey null, bitcore.Networks.testnet
btcAddress = privateKey.toAddress()
privateKeyWIF = privateKey.toWIF()

#################################
# save wif
#################################

cmd = """
  echo "#{privateKeyWIF}" > #{domainName}.wif
"""
# log cmd
exec cmd


#################################
# generate cert
#################################

certSubject = "/C=NO/ST=None/L=Aethers/O=OrgName/OU=#{btcAddress}/CN=#{domainName}"

cmd = """
  openssl req \
    -new \
    -newkey rsa:2048 \
    -nodes \
    -x509 \
    -days 365 \
    -subj "#{certSubject}" \
    -keyout #{domainName}.key \
    -out #{domainName}.cert
"""
# log cmd
exec cmd

#################################
# getSignatureFromCert
#################################

cert = "#{domainName}.cert"
cmd = "openssl x509 -noout -text -in #{cert}"
# log cmd
certText = exec cmd, silent: true
# log certText.output
m = certText.output.match /\n\s+Signature Algorithm: sha1WithRSAEncryption\s*((?:[0-9a-f]{2}[:\s]+)+)/
block = m[1]
text = block.replace /\W/g, ''
buf = new Buffer text, 'hex'
signatureDigest = digest buf, algorithm: 'sha256', encoding: 'HEX'
signatureSha256 = signatureDigest.hex

log "Certificate Validity WIF Private: " + privateKeyWIF
log "Certificate Validity Bitcoin Address: " + btcAddress
log "Certificate Signature (sha1WithRSAEncryption): " + text
log "Blockchain Proof of Existence (sha256): " + signatureSha256
